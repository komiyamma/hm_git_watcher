hidemaruversion "9.25.99";

jsmode "JScript\\" + currentmacrofilename;

js {
debuginfo(2);

var currentMacroDirectory = currentmacrodirectory();

if (gitWatcherComponent) {
    gitWatcherComponent.StopCheck();
}
// abcdfefgggbfffgggeefsg
//debuginfo(2);
var strTarget="HmGitWatcher";


var gitWatcherComponent = createobject(currentmacrodirectory() + "\\HmGitWatcher.comhost.dll", "{CD5AADB6-1A50-436F-85A1-84D72CFAECEB}");
debuginfo(2);

// ローカルリポジトリ、もしくは、結びつけられたリモートリポジトリの変化を検知した
function onGitStatusChange(repoFullPath, gitStatus, gitStatusPorchain, gitCherry) {
hidemaruversion("9.25.99");
console.log("★★");
    if (repoFullPath == "") {

	    renderpanecommand({
	        target:strTarget,
	        show: 0
	        });

        return;
    }
    // derived
    if (gitStatus.indexOf('use "git pull" to merge') !== -1) {
        gitStatus = 2;
    }
    else if (gitStatus.indexOf('use "git pull" to update') !== -1) {
        gitStatus = 1;
    }
    else {
        gitStatus = 0;
    }

    if (gitStatusPorchain) {
        gitStatusPorchain = 1;
    } else {
        gitStatusPorchain = 0;
	}
    if (gitCherry) {
        gitCherry = 1;
    } else {
        gitCherry = 0;
    }

    var readyState = renderpanecommand({target:strTarget,get:"readyState"});
    if( readyState == "complete" ) {
    var jscommand = 'javascript:HmGitWatcher_Update('+gitStatus + ',' + gitStatusPorchain+','+gitCherry+');';
console.log(jscommand);
    renderpanecommand({
        target:strTarget,
        uri:jscommand,
        show: 1
        });

    }

}




  
  function checkComplete(){
    //実行の順番(3) 繰り返し
    var readyState = renderpanecommand({target:strTarget,get:"readyState"});
    console.log(readyState);
    if( readyState == "complete" ) {
      hidemaru.clearInterval(idInterval);
      funcCompleted();
    }
  }
  
  function funcCompleted() {

// abc
gitWatcherComponent.Check(onGitStatusChange);

    //実行の順番(4)
    var idCallback=hidemaru.getFunctionId(funcCallback);
    renderpanecommand({
        target:strTarget,
        uri:'javascript:idCallback='+idCallback+';',
        });
  }
  
  var sGlobal="";
  function funcCallback(s){
    //実行の順番(5) 手動操作時
    sGlobal=s;
    console.log(s);
    hidemaru.postExecMacroMemory('js{message(sGlobal);}');
  }
  
  //実行の順番(1)
  renderpanecommand({
      target:strTarget,
      show:1,
      uri:currentMacroDirectory + "\\HmGitWatcher.html",
      place:"overlay",
      align: "right",
      x: 30,
      y: 30,
      cx: 200,
      cy: 60,
      });
      

  //実行の順番(2)
  var idInterval;
  if( typeof(idInterval)!="undefined" ) {
    hidemaru.clearInterval(idInterval);
  }
  idInterval = hidemaru.setInterval(checkComplete,500);


} // js

